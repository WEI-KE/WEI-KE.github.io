[{"categories":[null],"content":"Multithreaded_SSH V0.5.0 has been released. The code is now open source on Github. An .exe executable file has also been packaged. Feel free to download it if needed. The executable file is packaged using pyinstaller. Not sure why it is flagged by antivirus software like 360. If you have concerns, you can package it yourself. ","date":"2023-07-16","objectID":"/en/2023/07/multithreaded_ssh_v0.5.0/:0:0","tags":[null],"title":"Multithreaded_SSH_v0.5.0","uri":"/en/2023/07/multithreaded_ssh_v0.5.0/"},{"categories":[null],"content":"Release Notes: Added the ability to read from Excel. You can now retrieve host addresses, usernames, commands, and terminators from an Excel file. Improved code modularity. Optimized code logic. ","date":"2023-07-16","objectID":"/en/2023/07/multithreaded_ssh_v0.5.0/:1:0","tags":[null],"title":"Multithreaded_SSH_v0.5.0","uri":"/en/2023/07/multithreaded_ssh_v0.5.0/"},{"categories":[null],"content":"Usage Instructions: Prepare files: TXT mode: Make sure there are two files in the same directory as the program: host.txt and commands.txt. As the names suggest, host.txt should contain the addresses of remote hosts (one address per line), and commands.txt should contain the commands to be executed (one command per line). Excel mode: Ensure there is an SSH.xlsx file in the program‚Äôs directory, or manually input the file name. The Excel file format can be found in the example file on GitHub. The requirements are as follows: The header should include Address, Username, Multi_SSH_Enable, and cmd1. Optional: Hostname, end*. Command numbers should be consecutive without skipping any. For example, cmd1, cmd2, cmd3, cmd5. Commands starting from cmd5 and beyond will be ignored. The end numbers can be non-consecutive, and they correspond to the termination indicators for the commands with the same number. Hostname Address Username Multi_SSH_Enable cmd1 end1 Hostname Address Username Enable FlagTrue: EnabledFalse: DisabledLeave empty for enabled Command Command Terminator If you are using the source code, make sure the excel_read.py file is in the directory. Ensure that the program has permissions to create directories and files. After execution, the program will create two directories and several log files: log year-month-day.log Paramiko-year-month-day.log SSH_log year-month-day-host_address.log year-month-day.log is used to store the program‚Äôs output logs, where you can check the program‚Äôs execution status. Paramiko-year-month-day.log stores the logs generated by Paramiko, which can be useful for debugging SSH connection issues. year-month-day-host_address.log is used to store the output of each connected host after SSH connection. When you open the program, it will prompt you to enter the device password. The password will not be displayed on the terminal. During program execution, it will provide real-time information and summaries. However, if there are many devices, the output may appear messy. You can review the program logs after completion. ","date":"2023-07-16","objectID":"/en/2023/07/multithreaded_ssh_v0.5.0/:2:0","tags":[null],"title":"Multithreaded_SSH_v0.5.0","uri":"/en/2023/07/multithreaded_ssh_v0.5.0/"},{"categories":[null],"content":"Note: Although this version resolves the issue of not being able to customize terminators mentioned in v0.1.1, it still retains the ability to use \\n in commands to represent a newline. In TXT mode or if hostnames are not defined in the Excel file, an attempt will be made to define the hostname using the characters between \u003c and \u003e. If unsuccessful, the host will be skipped. In TXT mode or if end is not defined in the Excel file, the default interruption indicator will be \u003cdevice_name or [device_name. ","date":"2023-07-16","objectID":"/en/2023/07/multithreaded_ssh_v0.5.0/:3:0","tags":[null],"title":"Multithreaded_SSH_v0.5.0","uri":"/en/2023/07/multithreaded_ssh_v0.5.0/"},{"categories":[null],"content":"Update Plans: The code is entering a stable phase, and there are no planned updates in the near future unless issues are discovered or minor modifications are required. ","date":"2023-07-16","objectID":"/en/2023/07/multithreaded_ssh_v0.5.0/:4:0","tags":[null],"title":"Multithreaded_SSH_v0.5.0","uri":"/en/2023/07/multithreaded_ssh_v0.5.0/"},{"categories":[null],"content":"Conclusion: While coding, I accidentally discovered that Python supports using Chinese characters as variables, which led to this fun version. Feel free to exchange thoughts in the comment section below or directly submit issues on GitHub. If you find this program useful, you can give it a üëç below or give it a ‚≠ê on Github. Thank you for your support. This article was translated by ChatGPT. ","date":"2023-07-16","objectID":"/en/2023/07/multithreaded_ssh_v0.5.0/:5:0","tags":[null],"title":"Multithreaded_SSH_v0.5.0","uri":"/en/2023/07/multithreaded_ssh_v0.5.0/"},{"categories":[null],"content":"Introduction Recently, I replaced a batch of Huawei switches and switched to using SSH for remote access, which rendered my previous Telnet script unusable. Therefore, I spent some time rewriting a multi-threaded SSH program called Multithreaded-SSH using Python. This version is still not very flexible, but it can execute some basic commands. For example, it can execute ‚Äúdis cur‚Äù command combined with the ‚Äússhlog‚Äù file to backup device configurations, or perform batch password modifications. The code is open source on üëâ GitHub. I have also packaged it into an .exe executable file. Feel free to download it if you need it. Currently, the program is not available in English, but there might be an English version in the future. The executable file packaged with PyInstaller may be flagged as malicious by security software for unknown reasons. If you have concerns, you can choose to package it yourself. ","date":"2023-06-24","objectID":"/en/2023/06/multithreaded-ssh-v0.1.1/:1:0","tags":[null],"title":"Multithreaded SSH V0.1.1","uri":"/en/2023/06/multithreaded-ssh-v0.1.1/"},{"categories":[null],"content":"Usage Instructions Make sure there are two files named host.txt and commands.txt in the same directory as the program. As the names suggest, host.txt contains the addresses of remote hosts (one per line), and commands.txt contains the commands to be executed (one command per line). Make sure the program has permissions to create directories and files. After execution, the program will create two directories and several log files: log year-month-day.log Paramiko-year-month-day.log sshlog year-month-day-host-address.log year-month-day.log is used to store the program‚Äôs output logs, where you can see the execution status of the program. Paramiko-year-month-day.log stores the logs of Paramiko for troubleshooting SSH connections. year-month-day-host-address.log is used to store the output of each host after establishing an SSH connection. When prompted, enter the device password. The password will not be displayed in the terminal. The program will provide real-time output and summary while running, but it can be messy when dealing with multiple devices. You can check the program logs after it finishes. ","date":"2023-06-24","objectID":"/en/2023/06/multithreaded-ssh-v0.1.1/:2:0","tags":[null],"title":"Multithreaded SSH V0.1.1","uri":"/en/2023/06/multithreaded-ssh-v0.1.1/"},{"categories":[null],"content":"Note In the current version of the program (v0.1.1), the completion of a command is determined by the prompt \u003cdevice-name or [device-name. This is mainly to adapt to network devices of brands like Huawei. If a command does not return to the prompt within 60 seconds (default time), the program will consider it as a command execution failure. For example, if the command requires inputting ‚Äòy‚Äô, currently you can only put the combined command in one line, like save \\n y. Use \\n for line breaks. If you have other requirements, you can modify the code for handling command completion or wait for future updates. Info On some devices, the confirmation prompt times out after 30 seconds, and it will automatically cancel and return to the prompt. The program will capture this and consider the command execution successful. So, please check the sshlog logs for confirmation after the program finishes. ","date":"2023-06-24","objectID":"/en/2023/06/multithreaded-ssh-v0.1.1/:3:0","tags":[null],"title":"Multithreaded SSH V0.1.1","uri":"/en/2023/06/multithreaded-ssh-v0.1.1/"},{"categories":[null],"content":"Update Plans Expected updates within 2 to 3 weeks: Add the ability to define commands for individual hosts. Add the ability to define termination characters for each command to adapt to different scenarios and devices. Improve code modularity for easier integration and use by other programs. Optimize code logic. Enhance code comments. Not planned for updates: Automatic password retrieval: Currently, the program requires entering the device password each time it .is executed, and it will remain so in the future. I haven‚Äôt found a perfect way to store passwords. Automatic retrieval of usernames may be considered. ","date":"2023-06-24","objectID":"/en/2023/06/multithreaded-ssh-v0.1.1/:4:0","tags":[null],"title":"Multithreaded SSH V0.1.1","uri":"/en/2023/06/multithreaded-ssh-v0.1.1/"},{"categories":[null],"content":"Conclusion I‚Äôm still a beginner in the programming world, and my code may not be great. I welcome discussions in the comments section below or direct problem submissions (issues) on GitHub. If you find this program useful, you can give it a üëç below or give it a ‚≠ê on GitHub. Thank you for your support. This article was translated by ChatGPT. ","date":"2023-06-24","objectID":"/en/2023/06/multithreaded-ssh-v0.1.1/:5:0","tags":[null],"title":"Multithreaded SSH V0.1.1","uri":"/en/2023/06/multithreaded-ssh-v0.1.1/"},{"categories":null,"content":" Welcome to my blog, nice to meet you!ü§ù ","date":"2023-05-02","objectID":"/en/2023/05/about/:0:0","tags":[],"title":"About","uri":"/en/2023/05/about/"},{"categories":null,"content":"üë®‚Äçüíª Blogger WAKE ","date":"2023-05-02","objectID":"/en/2023/05/about/:1:0","tags":[],"title":"About","uri":"/en/2023/05/about/"},{"categories":null,"content":"‚õπ Interests üéÆ ","date":"2023-05-02","objectID":"/en/2023/05/about/:2:0","tags":[],"title":"About","uri":"/en/2023/05/about/"},{"categories":null,"content":"üì¨ Contact me If you can find this blog then you should already have my contact informationüòú ‚úâÔ∏èüëâhi@weike.club ","date":"2023-05-02","objectID":"/en/2023/05/about/:3:0","tags":[],"title":"About","uri":"/en/2023/05/about/"}]