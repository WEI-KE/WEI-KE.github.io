[{"categories":null,"content":"今天新加了giscus评论系统 想到可以用这个搞个说说唠唠页面， 支持MD格式 访客还可以评论，完美~ 如果你看不到下方的评论区说明你可能无法正常访问Github。 ","date":"2023-05-23","objectID":"/2023/05/discussions/:0:0","tags":null,"title":"聊天专用贴","uri":"/2023/05/discussions/"},{"categories":[],"content":" 一次偶然发现Ubuntu在输出报错信息 print_req_error: I/0 error, dev fd0, sector 0 ，查了一下是软驱相关报错，找了一个解决方案如下： ","date":"2023-05-15","objectID":"/2023/05/unbuntu-print_req_error/:0:0","tags":["Ubuntu"],"title":"print_req_error: I/0 error, dev fd0, sector 0","uri":"/2023/05/unbuntu-print_req_error/"},{"categories":[],"content":"Step 1 第一步 let’s list the block devices 列出块设备 lsblk if you are not using any floppy disk, there is no reason to have fd0 listed in the output of the command above. 如果你没有使用任何软盘，则在输出中不应出现fd0。 ","date":"2023-05-15","objectID":"/2023/05/unbuntu-print_req_error/:1:0","tags":["Ubuntu"],"title":"print_req_error: I/0 error, dev fd0, sector 0","uri":"/2023/05/unbuntu-print_req_error/"},{"categories":[],"content":"Step 2第二步 rmmod floppy “rmmod is a simple program which removes (unloads) a module from the Linux kernel.” Now run step 1 again to verify that the fd0 is no longer listed. rmmod是一个简单程序，它从Linux内核中删除（卸载）一个模块。再次执行第一步，检查fd0是否被删除。 ","date":"2023-05-15","objectID":"/2023/05/unbuntu-print_req_error/:2:0","tags":["Ubuntu"],"title":"print_req_error: I/0 error, dev fd0, sector 0","uri":"/2023/05/unbuntu-print_req_error/"},{"categories":[],"content":"Step 3第三步 Run the following command to make the changes permanent 运行以下命令以使更改永久生效 echo \"blacklist floppy\" | sudo tee /etc/modprobe.d/blacklist-floppy.conf This command just create a file name blacklist-floppy.conf in the /etc/modprobe.d folder and appends the text “blacklist floppy” to it. 此命令在 /etc/modprobe.d 文件夹中创建一个文件名 blacklist-floppy.conf，并将文本\"blacklist floppy\"附加到该文件夹中。 ","date":"2023-05-15","objectID":"/2023/05/unbuntu-print_req_error/:3:0","tags":["Ubuntu"],"title":"print_req_error: I/0 error, dev fd0, sector 0","uri":"/2023/05/unbuntu-print_req_error/"},{"categories":[],"content":"Step 4第四步 The last step is to reconfigure the kernel 最后一步是重新配置内核 dpkg-reconfigure initramfs-tools ","date":"2023-05-15","objectID":"/2023/05/unbuntu-print_req_error/:4:0","tags":["Ubuntu"],"title":"print_req_error: I/0 error, dev fd0, sector 0","uri":"/2023/05/unbuntu-print_req_error/"},{"categories":["Esxi"],"content":" 之前折腾usb硬盘安装esxi遇到的一些问题 ","date":"2023-05-03","objectID":"/2023/05/esxi-an-zhuang/:0:0","tags":["Esxi","硬件直通"],"title":"ESXI相关","uri":"/2023/05/esxi-an-zhuang/"},{"categories":["Esxi"],"content":"挂载USB存储： 在不接入USB硬盘的情况下输入以下命令： /etc/init.d/usbarbitrator stop chkconfig usbarbitrator off 接入硬盘 esxcli storage core device list |grep -i usb 查看分区表 cd /dev/disks/ partedUtil getptbl mpx.vmhba32:C0:T0:L0 示例 ： [root@localhost:/dev/disks] partedUtil getptbl mpx.vmhba32:C0:T0:L0 gpt 31130 255 63 500118192 1 64 204863 C12A7328F81F11D2BA4B00A0C93EC93B systemPartition 128 5 208896 8595455 EBD0A0A2B9E5443387C068B6B72699C7 linuxNative 0 6 8597504 16984063 EBD0A0A2B9E5443387C068B6B72699C7 linuxNative 0 创建新分区 partedUtil setptbl mpx.vmhba32:C0:T0:L0 gpt \\ \"1 64 204863 C12A7328F81F11D2BA4B00A0C93EC93B 128\" \\ \"5 208896 8595455 EBD0A0A2B9E5443387C068B6B72699C7 0\" \\ \"6 8597504 16984063 EBD0A0A2B9E5443387C068B6B72699C7 0\" \\ \"3 16984064 500118158 AA31E02A400F11DB9590000C2911D1B8 0\" 再次查看 partedUtil getptbl mpx.vmhba32:C0:T0:L0 格式化分区 vmkfstools -C vmfs6 -b 1m -S UsbDatastore mpx.vmhba32:C0:T0:L0:3 参考来源：https://vt.wooomooo.com/archives/39786 ","date":"2023-05-03","objectID":"/2023/05/esxi-an-zhuang/:1:0","tags":["Esxi","硬件直通"],"title":"ESXI相关","uri":"/2023/05/esxi-an-zhuang/"},{"categories":["Esxi"],"content":"SATA直通 查看SATA控制器 lspci -v | grep \"Class 0106\" -B 1 示例： [root@localhost:/dev/disks] lspci -v | grep \"Class 0106\" -B 1 0000:00:1f.2 Mass storage controller SATA controller: Intel Corporation Lynx Point AHCI Controller [vmhba0] Class 0106: 8086:8c02 编辑直通列表 vi /etc/vmware/passthru.map 在末尾添加 #Intel Corporation Lynx Point AHCI Controller 8086 8c02 d3d0 fasle 替换第二位设备ID即可 重启 reboot 参考来源：https://vt.wooomooo.com/archives/13671 ","date":"2023-05-03","objectID":"/2023/05/esxi-an-zhuang/:2:0","tags":["Esxi","硬件直通"],"title":"ESXI相关","uri":"/2023/05/esxi-an-zhuang/"},{"categories":["Esxi"],"content":"解决 未配置任何 coredump 目标。无法保存主机核心转储 查看coredump状态。 esxcli system coredump file list 看到最后一条的Actiive状态为false。 启用文件 esxcli system coredump file set -e true 5.再次查看coredump状态，已经改为true。 6.回到ESXI，告警信息已经没有了。 7.如果dumpfile不存在，要将 ESXi 配置为在 VMFS 上生成文件形式的 coredump，请执行以下操作： 使用 SSH 连接到 ESXi 主机； 运行以下命令添加用作 coredump 的新文件： esxcli system coredump file add -d可以指定用于 coredump 文件的vmfs数据存储。如果未提供此选项，将自动选择大小足够的数据存储。 -f可以指定 coredump 文件的文件名。如果未提供此选项，则会创建唯一名称。 例如： esxcli system coredump file add -d UsbDatastore -f test 运行以下命令获取具有访问权限的所有转储文件的列表： esxcli system coredump file list 您会看到类似以下内容的输出： 注意：如果没有指定 coredump 文件，则运行命令不会显示任何输出。 运行以下命令设置主机的转储文件： esxcli system coredump file set -p /vmfs/volumes/DATASTORE_UUID/vmkdump/FILENAME 例如： esxcli system coredump file set -p /vmfs/volumes/UsbDatastore/vmkdump/FCE0EAC0-D837-11DD-8EAD-F832E4BE8554.dumpfile 运行以下命令验证转储文件是否已配置并且处于活动状态： esxcli system coredump file list 您会看到类似以下内容的输出： 输出结果表明该文件的活动状态和已配置状态为 True。 ","date":"2023-05-03","objectID":"/2023/05/esxi-an-zhuang/:3:0","tags":["Esxi","硬件直通"],"title":"ESXI相关","uri":"/2023/05/esxi-an-zhuang/"},{"categories":["Esxi"],"content":"解决 系统日志存储在非持久存储中 在存储内新建存放主机日志的文件夹，并记录一下这个存储路径 例如 [UsbDatastore] Log/ 修改主机-配置-高级系统设置-编辑 修改 Syslog.global.logdir 值为新建的文件夹的存储路径 点击确定，警告消失 ","date":"2023-05-03","objectID":"/2023/05/esxi-an-zhuang/:4:0","tags":["Esxi","硬件直通"],"title":"ESXI相关","uri":"/2023/05/esxi-an-zhuang/"},{"categories":["Esxi"],"content":"开启嵌套虚拟化 vi /etc/vmware/config vhv.enable = \"TRUE\" ","date":"2023-05-03","objectID":"/2023/05/esxi-an-zhuang/:5:0","tags":["Esxi","硬件直通"],"title":"ESXI相关","uri":"/2023/05/esxi-an-zhuang/"},{"categories":[],"content":"1、安装6.4版本zabbix，以 Ubuntu 22.04、MySql、Nginx为例 wget https://repo.zabbix.com/zabbix/6.4/ubuntu/pool/main/z/zabbix-release/zabbix-release_6.4-1+ubuntu22.04_all.deb sudo dpkg -i zabbix-release_6.4-1+ubuntu22.04_all.deb sudo apt update sudo apt install zabbix-server-mysql zabbix-frontend-php zabbix-nginx-conf zabbix-sql-scripts zabbix-agent 2 、安装MySql 下载https://dev.mysql.com/downloads/repo/apt/并上传 或者http://mirrors.ustc.edu.cn/mysql-repo/ sudo dpkg -i mysql-apt-config_0.8.24-1_all.deb sudo apt update sudo apt install mysql-server 安装输入数据库ROOT密码，其他保持默认即可 3、配置数据库 mysql -uroot -p create database zabbix character set utf8mb4 collate utf8mb4_bin; create user zabbix@localhost identified by 'zabbix数据库密码'; grant all privileges on zabbix.* to zabbix@localhost; set global log_bin_trust_function_creators = 1; quit; 4、在Zabbix服务器主机上导入初始数据 sudo zcat /usr/share/zabbix-sql-scripts/mysql/server.sql.gz | mysql --default-character-set=utf8mb4 -uzabbix -p zabbix 输入zabbix数据库密码 5、导入数据库架构后禁用log_bin_trust_function_creators选项。 mysql -uroot -p password mysql\u003e set global log_bin_trust_function_creators = 0; mysql\u003e quit; 6、修改zabbix的配置文件 sudo vi /etc/zabbix/zabbix_server.conf DBPassword=zabbix数据库密码 7、修改nginx配置，修改注释和端口号 sudo vi /etc/zabbix/nginx.conf sudo vi /etc/nginx/sites-available listen 80; server_name example.com; 8添加中文支持，取消UTF-8的中文注释 sudo vi /etc/locale.gen sudo locale-gen 可能需要root账户执行locale-gen。。 9、重启服务设置自启动 sudo systemctl restart zabbix-server zabbix-agent nginx php8.1-fpm sudo systemctl enable zabbix-server zabbix-agent nginx php8.1-fpm 参考链接： ","date":"2023-05-03","objectID":"/2023/05/ubuntu-an-zhuang-zabbix/:0:0","tags":["Ubuntu","zabbix"],"title":"Ubuntu安装zabbix","uri":"/2023/05/ubuntu-an-zhuang-zabbix/"},{"categories":["ospf"],"content":"一篇很早的ospf学习笔记 ospf基础 ","date":"2023-05-03","objectID":"/2023/05/ospf-ji-chu/:0:0","tags":["网络","ospf","干货"],"title":"ospf基础","uri":"/2023/05/ospf-ji-chu/"},{"categories":["ospf"],"content":"Router ID： 企业网中的设备少则几台多则几十台甚至几百台，每台路由器都需要有一个唯一的ID用于标识自己。 Router ID是一个32位的无符号整数，其格式和IP地址的格式是一样的，RouterID选举规则如下： 手动配置OSPF路由器的Router ID（通常建议手动配置）； 如果没有手动配置Router ID，则路由器使用Loopback接口中最大的IP地址作为 Router ID； 如果没有配置Loopback接口，则路由器使用物理接口中最大的IP地址作为Router ID。 OSPF的路由器Router ID重新配置后，可以通过重置OSPF进程来更新Router ID。 注：router ID只是格式为ip地址格式，只是作为名称地址可以不存在 ","date":"2023-05-03","objectID":"/2023/05/ospf-ji-chu/:0:1","tags":["网络","ospf","干货"],"title":"ospf基础","uri":"/2023/05/ospf-ji-chu/"},{"categories":["ospf"],"content":"邻居建立过程： OSPF路由器之间在交换链路状态信息之前，首先需要彼此建立邻居关系，通过Hello报文 实现。 OSPF协议通过Hello报文可以让互联的路由器间自动发现并建立邻居关系，为后续可 在形成邻居关系过程中，路由器通过Hello报文完成一些参数的协商。 邻居关系建立后，周期性的Hello报文发送还可以实现邻居保持的功能，在一定时间 内没有收到邻居的Hello报文，则会中断路由器间的OSPF邻居关系。 达性信息的同步作准备。 两种方式：组播224.0.0.5 224.0.0.6、手工单播 LSA链路状态信息 链路类型 接口ip地址及掩码 链路上所连接的邻居路由器 链路的带宽（开销） ospf 度量方式 ospf 报文类型 路由信息仅在第4种里，其他的都是摘要信息 DR角色不会被抢占，需手动重启进程 ospf的lsdb同步 状态含义： ExStart：邻居状态变成此状态以后，路由器开始向邻居发送DD报文。Master/Slave 关系是在此状态下形成的，初始DD序列号也是在此状态下确定的。在此状态下发送 的DD报文不包含链路状态描述。 Exchange：在此状态下，路由器与邻居之间相互发送包含链路状态信息摘要的DD报 文。 Loading：在此状态下，路由器与邻居之间相互发送LSR报文、LSU报文、LSAck报 文。 Full：LSDB同步过程完成，路由器与邻居之间形成了完全的邻接关系。 LSDB同步过程如下： RTA和RTB的Router ID分别为[1.1.1.1和2.2.2.2并且二者已建立了邻居关系]。当RTA 的邻居状态变为ExStart后，RTA会发送第一个DD报文。此报文中，DD序列号被随 机设置为X，I-bit设置为1，表示这是第一个DD报文，M-bit设置为1，表示后续还有 DD报文要发送，MS-bit设置为1，表示RTA宣告自己为Master。 当RTB的邻居状态变为ExStart后，RTB会发送第一个DD报文。此报文中，DD序列号 被随机设置为Y（I-bit=1，M-bit=1，MS-bit=1，含义同上）。由于RTB的Router ID较大，所以RTB将成为真正的Master。收到此报文后，RTA会产生一个 Negotiation-Done事件，并将邻居状态从ExStart变为Exchange。 当RTA的邻居状态变为Exchange后，RTA会发送一个新的DD报文，此报文中包含了 LSDB的摘要信息，序列号设置为RTB在步骤2中使用的序列号Y，I-bit=0，表示这不 是第一个DD报文，M-bit=0，表示这是最后一个包含LSDB摘要信息的DD报文， MS-bit=0，表示RTA宣告自己为Slave。收到此报文后，RTB会产生一个 Negotiation-Done事件，并将邻居状态从ExStart变为Exchange。 当RTB的邻居状态变为Exchange后，RTB会发送一个新的DD报文，此报文包含了 LSDB的摘要信息，DD序列号设置为Y+1, MS-bit=1，表示RTB宣告自己为Master。 虽然RTA不需要发送新的包含LSDB摘要信息的DD报文，但是作为Slave，RTA需要 对Master发送的每一个DD报文进行确认。所以，RTA向RTB发送一个新的DD报文， 序列号为Y+1，该报文内容为空。发送完此报文后，RTA产生一个Exchange-Done 事件，将邻居状态变为Loading。RTB收到此报文后，会将邻居状态变为Full（假设 RTB的LSDB是最新最全的，不需要向RTA请求更新）。 如果需要更新： RTA开始向RTB发送LSR报文，请求那些在Exchange状态下通过DD报文发现的、并 且在本地LSDB中没有的链路状态信息。 RTB向RTA发送LSU报文，LSU报文中包含了那些被请求的链路状态的详细信息。 RTA向RTB发送LSAck报文，作为对LSU报文的确认。RTB收到LSAck报文后，双方便 建立起了完全的邻接关系。 从建立邻居关系到同步LSDB的过程较为复杂，错误的配置或设备链路故障都会导致无法完 成LSDB同步。为了快速排障，最关键的是要理解不同状态之间切换的触发原因。 RTA在完成LSU报文的接收之后，会将邻居状态从Loading变为Full。 ospf邻居状态机制 这是形成邻居关系的过程和相关邻居状态的变换过程。 Down：这是邻居的初始状态，表示没有从邻居收到任何信息。在NBMA网络上，此 状态下仍然可以向静态配置的邻居发送Hello报文，发送间隔为PollInterval，通常和 Router DeadInterval间隔相同。 Attempt：此状态只在NBMA网络上存在，表示没有收到邻居的任何信息，但是已经 周期性的向邻居发送报文，发送间隔为HelloInterval。如果Router DeadInterval间 隔内未收到邻居的Hello报文，则转为Down状态。 Init：在此状态下，路由器已经从邻居收到了Hello报文，但是自己不在所收到的 Hello报文的邻居列表中，表示尚未与邻居建立双向通信关系。在此状态下的邻居要 被包含在自己所发送的Hello报文的邻居列表中。 2-Way Received：此事件表示路由器发现与邻居的双向通信已经开始（发现自己在 邻居发送的Hello报文的邻居列表中）。Init状态下产生此事件之后，如果需要和邻居 建立邻接关系则进入ExStart状态，开始数据库同步过程，如果不能与邻居建立邻接 关系则进入2-Way。 2-Way：在此状态下，双向通信已经建立，但是没有与邻居建立邻接关系。这是建立 邻接关系以前的最高级状态。 1-Way Received：此事件表示路由器发现自己没有在邻居发送Hello报文的邻居列 表中，通常是由于对端邻居重启造成的。 ExStart：这是形成邻接关系的第一个步骤，邻居状态变成此状态以后，路由器开始 向邻居发送DD报文。主从关系是在此状态下形成的；初始DD序列号是在此状态下决 定的。在此状态下发送的DD报文不包含链路状态描述。 Exchange：此状态下路由器相互发送包含链路状态信息摘要的DD报文，描述本地 LSDB的内容。 Loading：相互发送LS Request报文请求LSA，发送LS Update通告LSA。 Full：两台路由器的LSDB已经同步。 DR与BDR选举 规则：基于接口，接口的优先级越大越优先，优先级相等 router ID越大越优先 优先级为0不参与选举 .6只有dr或bdr接收 .5给所有的ospf接收 ","date":"2023-05-03","objectID":"/2023/05/ospf-ji-chu/:0:2","tags":["网络","ospf","干货"],"title":"ospf基础","uri":"/2023/05/ospf-ji-chu/"},{"categories":["ospf"],"content":"邻接建立过程： 路由同步后才是邻接关系 ","date":"2023-05-03","objectID":"/2023/05/ospf-ji-chu/:0:3","tags":["网络","ospf","干货"],"title":"ospf基础","uri":"/2023/05/ospf-ji-chu/"},{"categories":null,"content":"Ubuntu安装wordpress 安装 LNMP（Linux Nginx MySQL PHP）套件 sudo apt-get update sudo apt-get install nginx mysql-server php-fpm php-mysql 配置 MySQL 数据库和用户。 sudo mysql -u root -p CREATE DATABASE wordpress; CREATE USER 'wordpressuser'@'localhost' IDENTIFIED BY 'password'; GRANT ALL PRIVILEGES ON wordpress.* TO 'wordpressuser'@'localhost'; FLUSH PRIVILEGES; exit 下载 WordPress 并将其解压缩到 Nginx 网站目录中 cd /var/www/ sudo wget \u003chttps://wordpress.org/latest.tar.gz\u003e sudo tar -zxvf latest.tar.gz sudo chown -R www-data:www-data /var/www/wordpress/ 配置 Nginx sudo vi /etc/nginx/sites-available/wordpress 然后将以下配置文件粘贴到该文件中，注意将 domain_name 替换为你的域名或 IP 地址： server { listen 80; listen [::]:80; root /var/www/wordpress; index index.php index.html index.htm; server_name domain_name; location / { try_files $uri $uri/ /index.php?$args; } location ~ \\\\.php$ { include snippets/fastcgi-php.conf; fastcgi_pass unix:/run/php/php7.4-fpm.sock; } location = /favicon.ico { log_not_found off; access_log off; } location = /robots.txt { log_not_found off; access_log off; allow all; } location ~* \\\\.(css|gif|ico|jpeg|jpg|js|png)$ { expires max; log_not_found off; } error_page 404 /404.html; error_page 500 502 503 504 /50x.html; location = /50x.html { root /usr/share/nginx/html; } } 保存并退出。 激活 Nginx Virtual Host sudo ln -s /etc/nginx/sites-available/wordpress /etc/nginx/sites-enabled/ sudo service nginx restart 完成 现在你可以通过在浏览器中输入你的域名或 IP 地址来访问 WordPress 站点，并按照安装向导完成 WordPress 的设置。 一些可能遇到的问题： 如果你已经安装了默认的Nginx站点并且监听了80端口，那么将会和新的WordPress站点 监- 听同一个端口，导致冲突。在这种情况下，你需要关闭或删除默认站点以释放80端口。 你可以通过执行以下命令来关闭默认站点： sudo unlink /etc/nginx/sites-enabled/default 如果你想删除默认站点配置文件，则可以执行以下命令： 注意 删除文件是永久性的操作，请谨慎执行。 sudo rm /etc/nginx/sites-available/default ","date":"2023-05-02","objectID":"/2023/05/ubuntu-an-zhuang-wordpress/:0:0","tags":["Ubuntu","wordpress","博客"],"title":"Ubuntu安装wordpress","uri":"/2023/05/ubuntu-an-zhuang-wordpress/"},{"categories":["ip"],"content":" 在互联网寻址结构中，互联网工程任务组（IETF）和互联网号码分配局（IANA）保留了许多用于特殊目的的网际协议（IP）地址。 保留IP ","date":"2023-05-02","objectID":"/2023/05/ipv4-bao-liu-ip/:0:0","tags":["网络","保留IP","IP地址","IPv4","IPv6"],"title":"IP地址中的保留IP","uri":"/2023/05/ipv4-bao-liu-ip/"},{"categories":["ip"],"content":"IPV4 地址块 (CIDR) 范围 地址数 效用域 用途 0.0.0.0/8 0.0.0.0 – 0.255.255.255 16,777,216 软件 用于广播信息到当前主机。[1] 10.0.0.0/8 10.0.0.0 – 10.255.255.255 16,777,216 专用网络 用于专用网络中的本地通信。[2] 100.64.0.0/10 100.64.0.0 – 100.127.255.255 4,194,304 专用网络 用于在电信级NAT环境中服务提供商与其用户通信。[3] 127.0.0.0/8 127.0.0.0 – 127.255.255.255 16,777,216 主机 用于到本地主机的环回地址。[4] 169.254.0.0/16 169.254.0.0 – 169.254.255.255 65,536 链路 用于单链路的两个主机之间的链路本地地址，而没有另外指定IP地址，例如通常从DHCP服务器所检索到的IP地址。[5] 172.16.0.0/12 172.16.0.0 – 172.31.255.255 1,048,576 专用网络 用于专用网络中的本地通信。[2] 192.0.0.0/24 192.0.0.0 – 192.0.0.255 256 专用网络 用于IANA的IPv4特殊用途地址表。[6] 192.0.2.0/24 192.0.2.0 – 192.0.2.255 256 文档 分配为用于文档和示例中的“TEST-NET”（测试网），它不应该被公开使用。[7] 192.88.99.0/24 192.88.99.0 – 192.88.99.255 256 互联网 用于6to4任播中继。[8]（已废弃[9]） 192.168.0.0/16 192.168.0.0 – 192.168.255.255 65,536 专用网络 用于专用网络中的本地通信。[2] 198.18.0.0/15 198.18.0.0 – 198.19.255.255 131,072 专用网络 用于测试两个不同的子网的网间通信。[10] 198.51.100.0/24 198.51.100.0 – 198.51.100.255 256 文档 分配为用于文档和示例中的“TEST-NET-2”（测试-网-2），它不应该被公开使用。[7] 203.0.113.0/24 203.0.113.0 – 203.0.113.255 256 文档 分配为用于文档和示例中的“TEST-NET-3”（测试-网-3），它不应该被公开使用。[7] 224.0.0.0/4 224.0.0.0 – 239.255.255.255 268,435,456 互联网 用于多播。[11] 233.252.0.0/24 233.252.0.0 - 233.252.0.255 256 文档 分配为用于文档和示例中的“MCAST-TEST-NET”，它不应该被公开使用 240.0.0.0/4 240.0.0.0 – 255.255.255.254 268,435,455 互联网 用于将来使用。[12] 255.255.255.255/32 255.255.255.255 1 子网 用于受限广播地址。[12] Address block Address range Number of addresses Scope Description 0.0.0.0/8 0.0.0.0–0.255.255.255 16777216 Software Current network[3] 10.0.0.0/8 10.0.0.0–10.255.255.255 16777216 Private network Used for local communications within a private network.[4] 100.64.0.0/10 100.64.0.0–100.127.255.255 4194304 Private network Shared address space[5] for communications between a service provider and its subscribers when using a carrier-grade NAT. 127.0.0.0/8 127.0.0.0–127.255.255.255 16777216 Host Used for loopback addresses to the local host.[3] 169.254.0.0/16 169.254.0.0–169.254.255.255 65536 Subnet Used for link-local addresses[6] between two hosts on a single link when no IP address is otherwise specified, such as would have normally been retrieved from a DHCP server. 172.16.0.0/12 172.16.0.0–172.31.255.255 1048576 Private network Used for local communications within a private network.[4] 192.0.0.0/24 192.0.0.0–192.0.0.255 256 Private network IETF Protocol Assignments.[3] 192.0.2.0/24 192.0.2.0–192.0.2.255 256 Documentation Assigned as TEST-NET-1, documentation and examples.[7] 192.88.99.0/24 192.88.99.0–192.88.99.255 256 Internet Reserved.[8] Formerly used for IPv6 to IPv4 relay[9] (included IPv6 address block 2002::/16). 192.168.0.0/16 192.168.0.0–192.168.255.255 65536 Private network Used for local communications within a private network.[4] 198.18.0.0/15 198.18.0.0–198.19.255.255 131072 Private network Used for benchmark testing of inter-network communications between two separate subnets.[10] 198.51.100.0/24 198.51.100.0–198.51.100.255 256 Documentation Assigned as TEST-NET-2, documentation and examples.[7] 203.0.113.0/24 203.0.113.0–203.0.113.255 256 Documentation Assigned as TEST-NET-3, documentation and examples.[7] 224.0.0.0/4 224.0.0.0–239.255.255.255 268435456 Internet In use for IP multicast.[11] (Former Class D network.) 233.252.0.0/24 233.252.0.0-233.252.0.255 256 Documentation Assigned as MCAST-TEST-NET, documentation and examples.[11][12] 240.0.0.0/4 240.0.0.0–255.255.255.254 268435455 Internet Reserved for future use.[13] (Former Class E network.) 255.255.255.255/32 255.255.255.255 1 Subnet Reserved for the “limited broadcast” destination address.[3][14] ","date":"2023-05-02","objectID":"/2023/05/ipv4-bao-liu-ip/:1:0","tags":["网络","保留IP","IP地址","IPv4","IPv6"],"title":"IP地址中的保留IP","uri":"/2023/05/ipv4-bao-liu-ip/"},{"categories":["ip"],"content":"IPV6 地址块（CIDR） 范围 地址数 效用域 用途 ::/128 :: 1 软件 未指定地址。 ::1/128 ::1 1 主机 用于到本地主机的环回地址。 ::ffff:0:0/96 ::ffff:0:0 –::ffff:ffff:ffff(::ffff:0.0.0.0 –::ffff:255.255.255.255) 232 软件 IPv4映射地址。 100::/64 100:: –100::ffff:ffff:ffff:ffff 264 RFC 6666中废除的前缀。 64:ff9b::/96 64:ff9b::64:ff9b::ffff:ffff(64:ff9b::0.0.0.0 –64:ff9b::255.255.255.255) 232 全球互联网[13] 用于IPv4/IPv6转换。（RFC 6052） 2001::/32 2001:: –2001::ffff:ffff:ffff:ffff:ffff:ffff 296 全局 用于Teredo通道。 2001:10::/28 2001:10:: –2001:1f:ffff:ffff:ffff:ffff:ffff:ffff 2100 软件 已弃用（先前为ORCHID）。 2001:20::/28 2001:20:: –2001:2f:ffff:ffff:ffff:ffff:ffff:ffff 2100 软件 ORCHIDv2。 2001:db8::/32 2001:db8:: –2001:db8:ffff:ffff:ffff:ffff:ffff:ffff 296 文档 用于文档和示例源代码中的地址。 2002::/16 2002:: –2002:ffff:ffff:ffff:ffff:ffff:ffff:ffff 2112 全球互联网 用于6to4。 fc00::/7 fc00:: –fdff:ffff:ffff:ffff:ffff:ffff:ffff:ffff 2121 专用网络 用于专用网络中的本地通信。 fe80::/10 fe80:: –febf:ffff:ffff:ffff:ffff:ffff:ffff:ffff 2118 链路 用于主机之间的链路本地地址。 ff00::/8 ff00:: –ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff 2120 全球互联网 用于多播地址。 Address block (CIDR) First address Last address Number of addresses Usage Purpose ::/0 :: ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff 2128 Routing Default route (no specific route) ::/128 :: :: 1 Software Unspecified address ::1/128 ::1 ::1 1 Host Loopback address—a virtual interface that loops all traffic back to itself, the local host ::ffff:0:0/96 ::ffff:0.0.0.0 ::ffff:255.255.255.255 2128 − 96 = 232 = 4294967296 Software IPv4-mapped addresses ::ffff:0:0:0/96 ::ffff:0:0.0.0.0 ::ffff:0:255.255.255.255 232 Software IPv4 translated addresses 64:ff9b::/96 64:ff9b::0.0.0.0 64:ff9b::255.255.255.255 232 Global Internet IPv4/IPv6 translation[15] 64:ff9b:1::/48 64:ff9b:1::0.0.0.0 64:ff9b:1:ffff:ffff:ffff:255.255.255.255 280 Private internets IPv4/IPv6 translation[16] 100::/64 100:: 100::ffff:ffff:ffff:ffff 264 Routing Discard prefix[17] 2001:0000::/32 2001:: 2001::ffff:ffff:ffff:ffff:ffff:ffff 296 Global Internet Teredo tunneling[18] 2001:20::/28 2001:20:: 2001:2f:ffff:ffff:ffff:ffff:ffff:ffff 2100 Software ORCHIDv2[19] 2001:db8::/32 2001:db8:: 2001:db8:ffff:ffff:ffff:ffff:ffff:ffff 296 Documentation Addresses used in documentation and example source code[20] 2002::/16 2002:: 2002:ffff:ffff:ffff:ffff:ffff:ffff:ffff 2112 Global Internet The 6to4 addressing scheme (deprecated)[8] fc00::/7 fc00:: fdff:ffff:ffff:ffff:ffff:ffff:ffff:ffff 2121 Private internets Unique local address[21] fe80::/10 fe80:: fe80::ffff:ffff:ffff:ffff 264 Link Link-local address ff00::/8 ff00:: ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff 2120 Global Internet Multicast address 来源：https://zh.wikipedia.org/wiki/保留IP地址 https://en.wikipedia.org/wiki/Reserved_IP_addresses#cite_note-rfc5771-11 ","date":"2023-05-02","objectID":"/2023/05/ipv4-bao-liu-ip/:2:0","tags":["网络","保留IP","IP地址","IPv4","IPv6"],"title":"IP地址中的保留IP","uri":"/2023/05/ipv4-bao-liu-ip/"},{"categories":null,"content":" 欢迎来到我的小站呀，很高兴遇见你！🤝 ","date":"2023-05-02","objectID":"/2023/05/about/:0:0","tags":[],"title":"关于","uri":"/2023/05/about/"},{"categories":null,"content":"👨‍💻 博主是谁 WAKE ","date":"2023-05-02","objectID":"/2023/05/about/:1:0","tags":[],"title":"关于","uri":"/2023/05/about/"},{"categories":null,"content":"⛹ 兴趣爱好 🎤 跳 rap 🏀 上面的都不喜欢, 精神不宅 身体很宅。 ","date":"2023-05-02","objectID":"/2023/05/about/:2:0","tags":[],"title":"关于","uri":"/2023/05/about/"},{"categories":null,"content":"📬 联系我呀 如果你能找到这个博客那你应该已经有了我的联系方式😜 前两个数字反一下👉6154074328@🐧✉️ ","date":"2023-05-02","objectID":"/2023/05/about/:3:0","tags":[],"title":"关于","uri":"/2023/05/about/"},{"categories":null,"content":"🤔最近想做个个人网站，主要用于记笔记顺便分享。 很早之前玩过云主机，所以买过域名和主机，顺势想到了继续用原来的方法。 今天看了看阿里云和腾讯的国内外的虚拟主机和ECS真是不便宜。 然后又看了看各种博客平台。 最后终于想起来 我来 和 息流 有分享页面的功能，而且我有一些笔记已经在上面了。 于是测试了一下分享页面，还行，就是下面有广告，免费的还要什么自行车。。 于是就有了你看到的这篇文章。。 PS：目前仅仅是为了测试博客放在笔记网站的可行性，有问题的话可能还是转到云主机。 测试失败，原因是本来想用自己的域名跳转到两个软件的公开分享链接 但是不行🤡因为没办法备案。。 第二天又研究了一下发现了现在的方案 Gridea+文件托管到github+CDN加速 希望能行 目前看起来还不错，接下来会把之前写的笔记同步一部分。 最终转战wordpress。 费了一点点力气终于是搞好了，目前方案是本地wordpress转静态+文件托管github+CDN。 最终的最终还是选定了Hugo+github+CDN加速。 （CDN暂时还没上） 原因是:word press功能很强大但是对静态部署不友好。 （回头详细讲讲这一路的心路历程 flag+1） ","date":"2023-05-02","objectID":"/2023/05/di-yi-pian-bo-ke/:0:0","tags":[],"title":"第一篇博客？","uri":"/2023/05/di-yi-pian-bo-ke/"}]